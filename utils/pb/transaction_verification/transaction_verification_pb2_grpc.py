# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import transaction_verification_pb2 as transaction__verification__pb2


class TransactionVerificationServiceStub(object):
    """Service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VerifyTransaction = channel.unary_unary(
                '/transaction.TransactionVerificationService/VerifyTransaction',
                request_serializer=transaction__verification__pb2.TransactionRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.TransactionResponse.FromString,
                )
        self.InitializeOrder = channel.unary_unary(
                '/transaction.TransactionVerificationService/InitializeOrder',
                request_serializer=transaction__verification__pb2.InitializeOrderRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.InitializeOrderResponse.FromString,
                )
        self.VerifyItems = channel.unary_unary(
                '/transaction.TransactionVerificationService/VerifyItems',
                request_serializer=transaction__verification__pb2.VerifyItemsRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.VerifyItemsResponse.FromString,
                )
        self.VerifyUserData = channel.unary_unary(
                '/transaction.TransactionVerificationService/VerifyUserData',
                request_serializer=transaction__verification__pb2.VerifyUserDataRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.VerifyUserDataResponse.FromString,
                )
        self.VerifyCardInfo = channel.unary_unary(
                '/transaction.TransactionVerificationService/VerifyCardInfo',
                request_serializer=transaction__verification__pb2.VerifyCardInfoRequest.SerializeToString,
                response_deserializer=transaction__verification__pb2.VerifyCardInfoResponse.FromString,
                )


class TransactionVerificationServiceServicer(object):
    """Service definition
    """

    def VerifyTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitializeOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyUserData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyCardInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionVerificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VerifyTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyTransaction,
                    request_deserializer=transaction__verification__pb2.TransactionRequest.FromString,
                    response_serializer=transaction__verification__pb2.TransactionResponse.SerializeToString,
            ),
            'InitializeOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeOrder,
                    request_deserializer=transaction__verification__pb2.InitializeOrderRequest.FromString,
                    response_serializer=transaction__verification__pb2.InitializeOrderResponse.SerializeToString,
            ),
            'VerifyItems': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyItems,
                    request_deserializer=transaction__verification__pb2.VerifyItemsRequest.FromString,
                    response_serializer=transaction__verification__pb2.VerifyItemsResponse.SerializeToString,
            ),
            'VerifyUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyUserData,
                    request_deserializer=transaction__verification__pb2.VerifyUserDataRequest.FromString,
                    response_serializer=transaction__verification__pb2.VerifyUserDataResponse.SerializeToString,
            ),
            'VerifyCardInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCardInfo,
                    request_deserializer=transaction__verification__pb2.VerifyCardInfoRequest.FromString,
                    response_serializer=transaction__verification__pb2.VerifyCardInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'transaction.TransactionVerificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransactionVerificationService(object):
    """Service definition
    """

    @staticmethod
    def VerifyTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/VerifyTransaction',
            transaction__verification__pb2.TransactionRequest.SerializeToString,
            transaction__verification__pb2.TransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitializeOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/InitializeOrder',
            transaction__verification__pb2.InitializeOrderRequest.SerializeToString,
            transaction__verification__pb2.InitializeOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/VerifyItems',
            transaction__verification__pb2.VerifyItemsRequest.SerializeToString,
            transaction__verification__pb2.VerifyItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/VerifyUserData',
            transaction__verification__pb2.VerifyUserDataRequest.SerializeToString,
            transaction__verification__pb2.VerifyUserDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyCardInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/transaction.TransactionVerificationService/VerifyCardInfo',
            transaction__verification__pb2.VerifyCardInfoRequest.SerializeToString,
            transaction__verification__pb2.VerifyCardInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
syntax = "proto3";

package suggestions;

// Service definition
service SuggestionsService {
    rpc GetBookSuggestions (SuggestionsRequest) returns (SuggestionsResponse);
    rpc InitializeOrder (InitializeOrderRequest) returns (InitializeOrderResponse);
    rpc GenerateSuggestions (GenerateSuggestionsRequest) returns (GenerateSuggestionsResponse);
}

// Request message (we will use the items ordered to suggest similar books)
message SuggestionsRequest {
    repeated Item items = 1;
}

// Item message (each item in the order)
message Item {
    string name = 1;
    int32 quantity = 2;
}

// Response message (list of suggested books)
message SuggestionsResponse {
    repeated Book books = 1;
}

message InitializeOrderRequest {
    string orderId = 1;
    string orderDataJson = 2;
}

message InitializeOrderResponse {
    bool success = 1;
    string message = 2;
}

// Book message (represents a suggested book)
message Book {
    string bookId = 1;
    string title = 2;
    string author = 3;
}

message GenerateSuggestionsRequest {
    string orderId = 1;
    repeated int32 vectorClock = 2;
    // string orderDataJson = 3;
}

message GenerateSuggestionsResponse {
    bool success = 1;
    string reason = 2;
    repeated int32 updatedClock = 3;
    repeated Book books = 4;
}